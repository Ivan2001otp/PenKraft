version: '3.8'

services:
#zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_LISTENER_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5


#kafka
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_INSIDE: INSIDE
      KAFKA_LISTENER_NAME_OUTSIDE: OUTSIDE
      KAFKA_LISTENER_PORT_INSIDE: 9094
      KAFKA_LISTENER_PORT_OUTSIDE: 9092
      KAFKA_LISTENER_INTERFACE: 0.0.0.0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9094,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_INTERNAL_SECURITY_PROTOCOL: PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - kafka-net


#elastic search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    container_name: elastic_search
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
    ports:
      - "9200:9200" #HTTP access
      - "9300:9300" # for internal coms
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - es_network
    restart: always

  redis:
    image: redis:latest
    container_name: redis_local
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - redis-net
    restart: always

volumes:
  redis-data:
  elasticsearch-data:

networks:
  es_network:
    driver: bridge
  redis-net:
    driver: bridge
  kafka-net:
    driver: bridge